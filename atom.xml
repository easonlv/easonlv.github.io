<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Diving into Data</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://easonlv.github.io/"/>
  <updated>2016-09-30T08:48:00.000Z</updated>
  <id>http://easonlv.github.io/</id>
  
  <author>
    <name>Eason Lv</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Implemention of QuickSork</title>
    <link href="http://easonlv.github.io/2016/09/25/Implemention-of-QuickSork/"/>
    <id>http://easonlv.github.io/2016/09/25/Implemention-of-QuickSork/</id>
    <published>2016-09-24T16:55:25.000Z</published>
    <updated>2016-09-30T08:48:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h1><p>###算法过程<br><strong>快速排序</strong> 的思想很简单，整个排序过程只需要三步：</p>
<ol>
<li>在数据集之中，找一个基准点；</li>
<li>建立两个数组，分别存储左边和右边的数组；</li>
<li>利用递归进行下次比较。</li>
</ol>
<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a>Java代码</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line">public class QuickSort &#123;    //一次划分</div><div class="line">    public static int partition(int[] arr, int left, int right) &#123;</div><div class="line">        int pivotKey = arr[left];</div><div class="line">        int pivotPointer = left;</div><div class="line">        </div><div class="line">        while(left &lt; right) &#123;</div><div class="line">            while(left &lt; right &amp;&amp; arr[right] &gt;= pivotKey)</div><div class="line">                right --;</div><div class="line">            while(left &lt; right &amp;&amp; arr[left] &lt;= pivotKey)</div><div class="line">                left ++;</div><div class="line">            swap(arr, left, right); //把大的交换到右边，把小的交换到左边。</div><div class="line">        &#125;</div><div class="line">        swap(arr, pivotPointer, left); //最后把pivot交换到中间</div><div class="line">        return left;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    public static void quickSort(int[] arr, int left, int right) &#123;</div><div class="line">        if(left &gt;= right)</div><div class="line">            return ;</div><div class="line">        int pivotPos = partition(arr, left, right);</div><div class="line">        quickSort(arr, left, pivotPos-1);</div><div class="line">        quickSort(arr, pivotPos+1, right);</div><div class="line">    &#125;</div><div class="line">    public static void sort(int[] arr) &#123;</div><div class="line">        if(arr == null || arr.length == 0)</div><div class="line">            return ;</div><div class="line">        quickSort(arr, 0, arr.length-1);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    public static void swap(int[] arr, int left, int right) &#123;</div><div class="line">        int temp = arr[left];</div><div class="line">        arr[left] = arr[right];</div><div class="line">        arr[right] = temp;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">``` </div><div class="line">### C代码</div><div class="line">``` c</div><div class="line">int Division(int a[],int left, int right) //分割</div><div class="line">&#123;</div><div class="line">    int base=a[left];    //基准元素</div><div class="line">    while(left&lt;right)</div><div class="line">    &#123;</div><div class="line">        while(left&lt;right &amp;&amp; a[right]&gt;base)</div><div class="line">            --right;     //从右向左找第一个比基准小的元素</div><div class="line">        a[left]=a[right];</div><div class="line">        while(left&lt;right &amp;&amp; a[left]&lt;base )</div><div class="line">            ++left;      //从左向右找第一个比基准大的元素</div><div class="line">        a[right]=a[left];</div><div class="line">    &#125;</div><div class="line">    a[left]=base;</div><div class="line">    return left;</div><div class="line">&#125;</div><div class="line">void QuickSort(int a[],int left,int right)</div><div class="line">&#123;</div><div class="line">    int i,j;</div><div class="line">    if(left&lt;right)</div><div class="line">    &#123;</div><div class="line">        i=Division(a,left,right);   //分割</div><div class="line">        QuickSort(a,left,i-1);     //将两部分分别排序</div><div class="line">        QuickSort(a,i+1,right);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a>JavaScript代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">quickSort</span>(<span class="params">arr</span>)</span>&#123;</div><div class="line">	<span class="keyword">if</span>(arr.length&lt;=<span class="number">1</span>)&#123;</div><div class="line">		<span class="keyword">return</span> arr;<span class="comment">//如果数组只有一个数，就直接返回；</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">var</span> num = <span class="built_in">Math</span>.floor(arr.length/<span class="number">2</span>);<span class="comment">//找到中间数的索引值，如果是浮点数，则向下取整</span></div><div class="line">	<span class="keyword">var</span> numValue = arr.splice(num,<span class="number">1</span>);<span class="comment">//找到中间数的值</span></div><div class="line">	<span class="keyword">var</span> left = [];</div><div class="line">	<span class="keyword">var</span> right = [];</div><div class="line"></div><div class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(arr[i]&lt;numValue)&#123;</div><div class="line">			left.push(arr[i]);<span class="comment">//基准点的左边的数传到左边数组</span></div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			right.push(arr[i]);<span class="comment">//基准点的右边的数传到右边数组</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> quickSort(left).concat(numValue,quickSort(right));<span class="comment">//递归不断重复比较</span></div><div class="line">&#125;</div><div class="line">alert(quickSort([<span class="number">32</span>,<span class="number">45</span>,<span class="number">37</span>,<span class="number">16</span>,<span class="number">2</span>,<span class="number">87</span>]));<span class="comment">//弹出“2,16,32,37,45,87”</span></div></pre></td></tr></table></figure>
<h3 id="Python代码"><a href="#Python代码" class="headerlink" title="Python代码"></a>Python代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sub_sort</span><span class="params">(array,low,high)</span>:</span></div><div class="line">    key = array[low]</div><div class="line">    <span class="keyword">while</span> low &lt; high:</div><div class="line">        <span class="keyword">while</span> low &lt; high <span class="keyword">and</span> array[high] &gt;= key:</div><div class="line">            high -= <span class="number">1</span></div><div class="line">        <span class="keyword">while</span> low &lt; high <span class="keyword">and</span> array[high] &lt; key:</div><div class="line">            array[low] = array[high]</div><div class="line">            low += <span class="number">1</span></div><div class="line">            array[high] = array[low]</div><div class="line">    array[low] = key</div><div class="line">    <span class="keyword">return</span> low</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">quick_sort</span><span class="params">(array,low,high)</span>:</span></div><div class="line">     <span class="keyword">if</span> low &lt; high:</div><div class="line">        key_index = sub_sort(array,low,high)</div><div class="line">        quick_sort(array,low,key_index)</div><div class="line">        quick_sort(array,key_index+<span class="number">1</span>,high)</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    array = [<span class="number">8</span>,<span class="number">10</span>,<span class="number">9</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">16</span>,<span class="number">5</span>,<span class="number">13</span>,<span class="number">26</span>,<span class="number">18</span>,<span class="number">2</span>,<span class="number">45</span>,<span class="number">34</span>,<span class="number">23</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">3</span>]</div><div class="line">    <span class="keyword">print</span> array</div><div class="line">    quick_sort(array,<span class="number">0</span>,len(array)<span class="number">-1</span>)</div><div class="line">    <span class="keyword">print</span> array</div></pre></td></tr></table></figure>
<h3 id="R代码"><a href="#R代码" class="headerlink" title="R代码"></a>R代码</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">qsort &lt;- <span class="keyword">function</span>(v) &#123;</div><div class="line">  <span class="keyword">if</span> ( length(v) &gt; <span class="number">1</span> ) </div><div class="line">  &#123;</div><div class="line">    pivot &lt;- (min(v) + max(v))/<span class="number">2.0</span>                            </div><div class="line">    c(qsort(v[v &lt; pivot]), v[v == pivot], qsort(v[v &gt; pivot])) </div><div class="line">  &#125; <span class="keyword">else</span> v</div><div class="line">&#125;</div><div class="line"></div><div class="line">N &lt;- <span class="number">100</span></div><div class="line">vs &lt;- runif(N)</div><div class="line">system.time(u &lt;- qsort(vs))</div><div class="line">print(u)</div><div class="line"></div><div class="line">Qsort &lt;- <span class="keyword">function</span>(x)&#123;</div><div class="line"> <span class="keyword">if</span> (length(x) &lt; <span class="number">2</span>) <span class="keyword">return</span>(x)</div><div class="line"> <span class="keyword">return</span>(c(Qsort(x[x&lt;x[<span class="number">1</span>]]), x[x==x[<span class="number">1</span>]], Qsort(x[x&gt;x[<span class="number">1</span>]])))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;快速排序&quot;&gt;&lt;a href=&quot;#快速排序&quot; class=&quot;headerlink&quot; title=&quot;快速排序&quot;&gt;&lt;/a&gt;快速排序&lt;/h1&gt;&lt;p&gt;###算法过程&lt;br&gt;&lt;strong&gt;快速排序&lt;/strong&gt; 的思想很简单，整个排序过程只需要三步：&lt;/p&gt;
&lt;ol&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://easonlv.github.io/2016/09/22/hello-world/"/>
    <id>http://easonlv.github.io/2016/09/22/hello-world/</id>
    <published>2016-09-22T07:14:27.000Z</published>
    <updated>2016-09-22T07:14:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
